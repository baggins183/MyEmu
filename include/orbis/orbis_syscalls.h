// Values found at https://github.com/astrelsky/GhidraOrbis

#pragma once
#include <map>
#include <string>

#define ORBIS_SYSCALL_TABLE(OP) \
	OP(1, ORB_SYS_exit) \
	OP(2, ORB_SYS_fork) \
	OP(3, ORB_SYS_read) \
	OP(4, ORB_SYS_write) \
	OP(5, ORB_SYS_open) \
	OP(6, ORB_SYS_close) \
	OP(7, ORB_SYS_wait4) \
	OP(9, ORB_SYS_link) \
	OP(10, ORB_SYS_unlink) \
	OP(12, ORB_SYS_chdir) \
	OP(13, ORB_SYS_fchdir) \
	OP(14, ORB_SYS_mknod) \
	OP(15, ORB_SYS_chmod) \
	OP(16, ORB_SYS_chown) \
	OP(20, ORB_SYS_getpid) \
	OP(21, ORB_SYS_mount) \
	OP(22, ORB_SYS_unmount) \
	OP(23, ORB_SYS_setuid) \
	OP(24, ORB_SYS_getuid) \
	OP(25, ORB_SYS_geteuid) \
	OP(26, ORB_SYS_ptrace) \
	OP(27, ORB_SYS_recvmsg) \
	OP(28, ORB_SYS_sendmsg) \
	OP(29, ORB_SYS_recvfrom) \
	OP(30, ORB_SYS_accept) \
	OP(31, ORB_SYS_getpeername) \
	OP(32, ORB_SYS_getsockname) \
	OP(33, ORB_SYS_access) \
	OP(34, ORB_SYS_chflags) \
	OP(35, ORB_SYS_fchflags) \
	OP(36, ORB_SYS_sync) \
	OP(37, ORB_SYS_kill) \
	OP(39, ORB_SYS_getppid) \
	OP(41, ORB_SYS_dup) \
	OP(42, ORB_SYS_pipe) \
	OP(43, ORB_SYS_getegid) \
	OP(44, ORB_SYS_profil) \
	OP(45, ORB_SYS_ktrace) \
	OP(47, ORB_SYS_getgid) \
	OP(49, ORB_SYS_getlogin) \
	OP(50, ORB_SYS_setlogin) \
	OP(53, ORB_SYS_sigaltstack) \
	OP(54, ORB_SYS_ioctl) \
	OP(55, ORB_SYS_reboot) \
	OP(56, ORB_SYS_revoke) \
	OP(57, ORB_SYS_symlink) \
	OP(58, ORB_SYS_readlink) \
	OP(59, ORB_SYS_execve) \
	OP(60, ORB_SYS_umask) \
	OP(61, ORB_SYS_chroot) \
	OP(65, ORB_SYS_netbsd_msync) \
	OP(66, ORB_SYS_vfork) \
	OP(69, ORB_SYS_sbrk) \
	OP(70, ORB_SYS_sstk) \
	OP(73, ORB_SYS_munmap) \
	OP(74, ORB_SYS_mprotect) \
	OP(75, ORB_SYS_madvise) \
	OP(78, ORB_SYS_mincore) \
	OP(79, ORB_SYS_getgroups) \
	OP(80, ORB_SYS_setgroups) \
	OP(81, ORB_SYS_getpgrp) \
	OP(82, ORB_SYS_setpgid) \
	OP(83, ORB_SYS_setitimer) \
	OP(85, ORB_SYS_swapon) \
	OP(86, ORB_SYS_getitimer) \
	OP(89, ORB_SYS_getdtablesize) \
	OP(90, ORB_SYS_dup2) \
	OP(92, ORB_SYS_fcntl) \
	OP(93, ORB_SYS_select) \
	OP(95, ORB_SYS_fsync) \
	OP(96, ORB_SYS_setpriority) \
	OP(97, ORB_SYS_socket) \
	OP(98, ORB_SYS_connect) \
	OP(99, ORB_SYS_netcontrol) \
	OP(100, ORB_SYS_getpriority) \
	OP(101, ORB_SYS_netabort) \
	OP(102, ORB_SYS_netgetsockinfo) \
	OP(104, ORB_SYS_bind) \
	OP(105, ORB_SYS_setsockopt) \
	OP(106, ORB_SYS_listen) \
	OP(113, ORB_SYS_socketex) \
	OP(114, ORB_SYS_socketclose) \
	OP(116, ORB_SYS_gettimeofday) \
	OP(117, ORB_SYS_getrusage) \
	OP(118, ORB_SYS_getsockopt) \
	OP(120, ORB_SYS_readv) \
	OP(121, ORB_SYS_writev) \
	OP(122, ORB_SYS_settimeofday) \
	OP(123, ORB_SYS_fchown) \
	OP(124, ORB_SYS_fchmod) \
	OP(125, ORB_SYS_netgetiflist) \
	OP(126, ORB_SYS_setreuid) \
	OP(127, ORB_SYS_setregid) \
	OP(128, ORB_SYS_rename) \
	OP(131, ORB_SYS_flock) \
	OP(132, ORB_SYS_mkfifo) \
	OP(133, ORB_SYS_sendto) \
	OP(134, ORB_SYS_shutdown) \
	OP(135, ORB_SYS_socketpair) \
	OP(136, ORB_SYS_mkdir) \
	OP(137, ORB_SYS_rmdir) \
	OP(138, ORB_SYS_utimes) \
	OP(140, ORB_SYS_adjtime) \
	OP(141, ORB_SYS_kqueueex) \
	OP(147, ORB_SYS_setsid) \
	OP(154, ORB_SYS_shmctl) \
	OP(155, ORB_SYS_nfssvc) \
	OP(165, ORB_SYS_sysarch) \
	OP(166, ORB_SYS_rtprio) \
	OP(181, ORB_SYS_setgid) \
	OP(182, ORB_SYS_setegid) \
	OP(183, ORB_SYS_seteuid) \
	OP(188, ORB_SYS_stat) \
	OP(189, ORB_SYS_fstat) \
	OP(190, ORB_SYS_lstat) \
	OP(191, ORB_SYS_pathconf) \
	OP(192, ORB_SYS_fpathconf) \
	OP(194, ORB_SYS_getrlimit) \
	OP(195, ORB_SYS_setrlimit) \
	OP(196, ORB_SYS_getdirentries) \
	OP(202, ORB_SYS___sysctl) \
	OP(203, ORB_SYS_mlock) \
	OP(204, ORB_SYS_munlock) \
	OP(206, ORB_SYS_futimes) \
	OP(207, ORB_SYS_getpgid) \
	OP(209, ORB_SYS_poll) \
	OP(210, ORB_SYS_lkmnosys) \
	OP(232, ORB_SYS_clock_gettime) \
	OP(233, ORB_SYS_clock_settime) \
	OP(234, ORB_SYS_clock_getres) \
	OP(235, ORB_SYS_ktimer_create) \
	OP(236, ORB_SYS_ktimer_delete) \
	OP(237, ORB_SYS_ktimer_settime) \
	OP(238, ORB_SYS_ktimer_gettime) \
	OP(239, ORB_SYS_ktimer_getoverrun) \
	OP(240, ORB_SYS_nanosleep) \
	OP(250, ORB_SYS_minherit) \
	OP(251, ORB_SYS_rfork) \
	OP(253, ORB_SYS_issetugid) \
	OP(254, ORB_SYS_netbsd_lchown) \
	OP(255, ORB_SYS_aio_read) \
	OP(256, ORB_SYS_aio_write) \
	OP(272, ORB_SYS_getdents) \
	OP(274, ORB_SYS_lchmod) \
	OP(276, ORB_SYS_lutimes) \
	OP(289, ORB_SYS_preadv) \
	OP(290, ORB_SYS_pwritev) \
	OP(304, ORB_SYS_kldload) \
	OP(305, ORB_SYS_kldunload) \
	OP(306, ORB_SYS_kldfind) \
	OP(307, ORB_SYS_kldnext) \
	OP(308, ORB_SYS_kldstat) \
	OP(309, ORB_SYS_kldfirstmod) \
	OP(310, ORB_SYS_getsid) \
	OP(311, ORB_SYS_setresuid) \
	OP(312, ORB_SYS_setresgid) \
	OP(314, ORB_SYS_aio_return) \
	OP(315, ORB_SYS_aio_suspend) \
	OP(316, ORB_SYS_aio_cancel) \
	OP(317, ORB_SYS_aio_error) \
	OP(321, ORB_SYS_yield) \
	OP(324, ORB_SYS_mlockall) \
	OP(325, ORB_SYS_munlockall) \
	OP(326, ORB_SYS___getcwd) \
	OP(327, ORB_SYS_sched_setparam) \
	OP(328, ORB_SYS_sched_getparam) \
	OP(329, ORB_SYS_sched_setscheduler) \
	OP(330, ORB_SYS_sched_getscheduler) \
	OP(331, ORB_SYS_sched_yield) \
	OP(332, ORB_SYS_sched_get_priority_max) \
	OP(333, ORB_SYS_sched_get_priority_min) \
	OP(334, ORB_SYS_sched_rr_get_interval) \
	OP(335, ORB_SYS_utrace) \
	OP(337, ORB_SYS_kldsym) \
	OP(340, ORB_SYS_sigprocmask) \
	OP(341, ORB_SYS_sigsuspend) \
	OP(343, ORB_SYS_sigpending) \
	OP(345, ORB_SYS_sigtimedwait) \
	OP(346, ORB_SYS_sigwaitinfo) \
	OP(359, ORB_SYS_aio_waitcomplete) \
	OP(360, ORB_SYS_getresuid) \
	OP(361, ORB_SYS_getresgid) \
	OP(362, ORB_SYS_kqueue) \
	OP(363, ORB_SYS_kevent) \
	OP(374, ORB_SYS___setugid) \
	OP(378, ORB_SYS_nmount) \
	OP(379, ORB_SYS_mtypeprotect) \
	OP(384, ORB_SYS___mac_get_proc) \
	OP(385, ORB_SYS___mac_set_proc) \
	OP(386, ORB_SYS___mac_get_fd) \
	OP(387, ORB_SYS___mac_get_file) \
	OP(388, ORB_SYS___mac_set_fd) \
	OP(389, ORB_SYS___mac_set_file) \
	OP(390, ORB_SYS_kenv) \
	OP(391, ORB_SYS_lchflags) \
	OP(392, ORB_SYS_uuidgen) \
	OP(393, ORB_SYS_sendfile) \
	OP(394, ORB_SYS_mac_syscall) \
	OP(395, ORB_SYS_getfsstat) \
	OP(396, ORB_SYS_statfs) \
	OP(397, ORB_SYS_fstatfs) \
	OP(400, ORB_SYS_ksem_close) \
	OP(401, ORB_SYS_ksem_post) \
	OP(402, ORB_SYS_ksem_wait) \
	OP(403, ORB_SYS_ksem_trywait) \
	OP(404, ORB_SYS_ksem_init) \
	OP(405, ORB_SYS_ksem_open) \
	OP(406, ORB_SYS_ksem_unlink) \
	OP(407, ORB_SYS_ksem_getvalue) \
	OP(408, ORB_SYS_ksem_destroy) \
	OP(409, ORB_SYS___mac_get_pid) \
	OP(410, ORB_SYS___mac_get_link) \
	OP(411, ORB_SYS___mac_set_link) \
	OP(415, ORB_SYS___mac_execve) \
	OP(416, ORB_SYS_sigaction) \
	OP(417, ORB_SYS_sigreturn) \
	OP(421, ORB_SYS_getcontext) \
	OP(422, ORB_SYS_setcontext) \
	OP(423, ORB_SYS_swapcontext) \
	OP(429, ORB_SYS_sigwait) \
	OP(430, ORB_SYS_thr_create) \
	OP(431, ORB_SYS_thr_exit) \
	OP(432, ORB_SYS_thr_self) \
	OP(433, ORB_SYS_thr_kill) \
	OP(434, ORB_SYS__umtx_lock) \
	OP(435, ORB_SYS__umtx_unlock) \
	OP(441, ORB_SYS_ksem_timedwait) \
	OP(442, ORB_SYS_thr_suspend) \
	OP(443, ORB_SYS_thr_wake) \
	OP(444, ORB_SYS_kldunloadf) \
	OP(454, ORB_SYS__umtx_op) \
	OP(455, ORB_SYS_thr_new) \
	OP(456, ORB_SYS_sigqueue) \
	OP(464, ORB_SYS_thr_set_name) \
	OP(465, ORB_SYS_aio_fsync) \
	OP(466, ORB_SYS_rtprio_thread) \
	OP(475, ORB_SYS_pread) \
	OP(476, ORB_SYS_pwrite) \
	OP(477, ORB_SYS_mmap) \
	OP(478, ORB_SYS_lseek) \
	OP(479, ORB_SYS_truncate) \
	OP(480, ORB_SYS_ftruncate) \
	OP(481, ORB_SYS_thr_kill2) \
	OP(482, ORB_SYS_shm_open) \
	OP(483, ORB_SYS_shm_unlink) \
	OP(484, ORB_SYS_cpuset) \
	OP(485, ORB_SYS_cpuset_setid) \
	OP(486, ORB_SYS_cpuset_getid) \
	OP(487, ORB_SYS_cpuset_getaffinity) \
	OP(488, ORB_SYS_cpuset_setaffinity) \
	OP(490, ORB_SYS_fchmodat) \
	OP(491, ORB_SYS_fchownat) \
	OP(493, ORB_SYS_fstatat) \
	OP(494, ORB_SYS_futimesat) \
	OP(495, ORB_SYS_linkat) \
	OP(496, ORB_SYS_mkdirat) \
	OP(497, ORB_SYS_mkfifoat) \
	OP(498, ORB_SYS_mknodat) \
	OP(499, ORB_SYS_openat) \
	OP(501, ORB_SYS_renameat) \
	OP(502, ORB_SYS_symlinkat) \
	OP(503, ORB_SYS_unlinkat) \
	OP(514, ORB_SYS_cap_new) \
	OP(515, ORB_SYS_cap_getrights) \
	OP(516, ORB_SYS_cap_enter) \
	OP(517, ORB_SYS_cap_getmode) \
	OP(518, ORB_SYS_pdfork) \
	OP(519, ORB_SYS_pdkill) \
	OP(520, ORB_SYS_pdgetpid) \
	OP(522, ORB_SYS_pselect) \
	OP(525, ORB_SYS_rctl_get_racct) \
	OP(526, ORB_SYS_rctl_get_rules) \
	OP(527, ORB_SYS_rctl_get_limits) \
	OP(528, ORB_SYS_rctl_add_rule) \
	OP(529, ORB_SYS_rctl_remove_rule) \
	OP(532, ORB_SYS_regmgr_call) \
	OP(533, ORB_SYS_jitshm_create) \
	OP(534, ORB_SYS_jitshm_alias) \
	OP(535, ORB_SYS_dl_get_list) \
	OP(536, ORB_SYS_dl_get_info) \
	OP(538, ORB_SYS_evf_create) \
	OP(539, ORB_SYS_evf_delete) \
	OP(540, ORB_SYS_evf_open) \
	OP(541, ORB_SYS_evf_close) \
	OP(542, ORB_SYS_evf_wait) \
	OP(543, ORB_SYS_evf_trywait) \
	OP(544, ORB_SYS_evf_set) \
	OP(545, ORB_SYS_evf_clear) \
	OP(546, ORB_SYS_evf_cancel) \
	OP(547, ORB_SYS_query_memory_protection) \
	OP(548, ORB_SYS_batch_map) \
	OP(549, ORB_SYS_osem_create) \
	OP(550, ORB_SYS_osem_delete) \
	OP(551, ORB_SYS_osem_open) \
	OP(552, ORB_SYS_osem_close) \
	OP(553, ORB_SYS_osem_wait) \
	OP(554, ORB_SYS_osem_trywait) \
	OP(555, ORB_SYS_osem_post) \
	OP(556, ORB_SYS_osem_cancel) \
	OP(557, ORB_SYS_namedobj_create) \
	OP(558, ORB_SYS_namedobj_delete) \
	OP(559, ORB_SYS_set_vm_container) \
	OP(560, ORB_SYS_debug_init) \
	OP(561, ORB_SYS_suspend_process) \
	OP(562, ORB_SYS_resume_process) \
	OP(563, ORB_SYS_opmc_enable) \
	OP(564, ORB_SYS_opmc_disable) \
	OP(565, ORB_SYS_opmc_set_ctl) \
	OP(566, ORB_SYS_opmc_set_ctr) \
	OP(567, ORB_SYS_opmc_get_ctr) \
	OP(568, ORB_SYS_budget_create) \
	OP(569, ORB_SYS_budget_delete) \
	OP(570, ORB_SYS_budget_get) \
	OP(571, ORB_SYS_budget_set) \
	OP(572, ORB_SYS_virtual_query) \
	OP(573, ORB_SYS_mdbg_call) \
	OP(580, ORB_SYS_eport_create) \
	OP(581, ORB_SYS_eport_delete) \
	OP(582, ORB_SYS_eport_trigger) \
	OP(583, ORB_SYS_eport_open) \
	OP(584, ORB_SYS_eport_close) \
	OP(585, ORB_SYS_is_in_sandbox) \
	OP(586, ORB_SYS_dmem_container) \
	OP(587, ORB_SYS_get_authinfo) \
	OP(588, ORB_SYS_mname) \
	OP(589, ORB_SYS_dynlib_dlopen) \
	OP(590, ORB_SYS_dynlib_dlclose) \
	OP(591, ORB_SYS_dynlib_dlsym) \
	OP(592, ORB_SYS_dynlib_get_list) \
	OP(593, ORB_SYS_dynlib_get_info) \
	OP(594, ORB_SYS_dynlib_load_prx) \
	OP(595, ORB_SYS_dynlib_unload_prx) \
	OP(596, ORB_SYS_dynlib_do_copy_relocations) \
	OP(597, ORB_SYS_dynlib_prepare_dlclose) \
	OP(598, ORB_SYS_dynlib_get_proc_param) \
	OP(599, ORB_SYS_dynlib_process_needed_and_relocate) \
	OP(600, ORB_SYS_sandbox_path) \
	OP(601, ORB_SYS_mdbg_service) \
	OP(602, ORB_SYS_randomized_path) \
	OP(603, ORB_SYS_rdup) \
	OP(604, ORB_SYS_dl_get_metadata) \
	OP(605, ORB_SYS_workaround8849) \
	OP(606, ORB_SYS_is_development_mode) \
	OP(607, ORB_SYS_get_self_auth_info) \
	OP(608, ORB_SYS_dynlib_get_info_ex) \
	OP(609, ORB_SYS_budget_getid) \
	OP(610, ORB_SYS_budget_get_ptype) \
	OP(611, ORB_SYS_get_paging_stats_of_all_threads) \
	OP(612, ORB_SYS_get_proc_type_info) \
	OP(613, ORB_SYS_get_resident_count) \
	OP(614, ORB_SYS_prepare_to_suspend_process) \
	OP(615, ORB_SYS_get_resident_fmem_count) \
	OP(616, ORB_SYS_thr_get_name) \
	OP(617, ORB_SYS_set_gpo) \
	OP(618, ORB_SYS_get_paging_stats_of_all_objects) \
	OP(619, ORB_SYS_test_debug_rwmem) \
	OP(620, ORB_SYS_free_stack) \
	OP(621, ORB_SYS_suspend_system) \
	OP(622, ORB_SYS_ipmimgr_call) \
	OP(623, ORB_SYS_get_gpo) \
	OP(624, ORB_SYS_get_vm_map_timestamp) \
	OP(625, ORB_SYS_opmc_set_hw) \
	OP(626, ORB_SYS_opmc_get_hw) \
	OP(627, ORB_SYS_get_cpu_usage_all) \
	OP(628, ORB_SYS_mmap_dmem) \
	OP(629, ORB_SYS_physhm_open) \
	OP(630, ORB_SYS_physhm_unlink) \
	OP(631, ORB_SYS_resume_internal_hdd) \
	OP(632, ORB_SYS_thr_suspend_ucontext) \
	OP(633, ORB_SYS_thr_resume_ucontext) \
	OP(634, ORB_SYS_thr_get_ucontext) \
	OP(635, ORB_SYS_thr_set_ucontext) \
	OP(636, ORB_SYS_set_timezone_info) \
	OP(637, ORB_SYS_set_phys_fmem_limit) \
	OP(638, ORB_SYS_utc_to_localtime) \
	OP(639, ORB_SYS_localtime_to_utc) \
	OP(640, ORB_SYS_set_uevt) \
	OP(641, ORB_SYS_get_cpu_usage_proc) \
	OP(642, ORB_SYS_get_map_statistics) \
	OP(643, ORB_SYS_set_chicken_switches) \
	OP(646, ORB_SYS_get_kernel_mem_statistics) \
	OP(647, ORB_SYS_get_sdk_compiled_version) \
	OP(648, ORB_SYS_app_state_change) \
	OP(649, ORB_SYS_dynlib_get_obj_member) \
	OP(650, ORB_SYS_budget_get_ptype_of_budget) \
	OP(651, ORB_SYS_prepare_to_resume_process) \
	OP(652, ORB_SYS_process_terminate) \
	OP(653, ORB_SYS_blockpool_open) \
	OP(654, ORB_SYS_blockpool_map) \
	OP(655, ORB_SYS_blockpool_unmap) \
	OP(656, ORB_SYS_dynlib_get_info_for_libdbg) \
	OP(657, ORB_SYS_blockpool_batch) \
	OP(658, ORB_SYS_fdatasync) \
	OP(659, ORB_SYS_dynlib_get_list2) \
	OP(660, ORB_SYS_dynlib_get_info2) \
	OP(661, ORB_SYS_aio_submit) \
	OP(662, ORB_SYS_aio_multi_delete) \
	OP(663, ORB_SYS_aio_multi_wait) \
	OP(664, ORB_SYS_aio_multi_poll) \
	OP(665, ORB_SYS_aio_get_data) \
	OP(666, ORB_SYS_aio_multi_cancel) \
	OP(667, ORB_SYS_get_bio_usage_all) \
	OP(668, ORB_SYS_aio_create) \
	OP(669, ORB_SYS_aio_submit_cmd) \
	OP(670, ORB_SYS_aio_init) \
	OP(671, ORB_SYS_get_page_table_stats) \
	OP(672, ORB_SYS_dynlib_get_list_for_libdbg)

enum OrbisSyscallNr {
#define ENUM_OP(value, name) name = value,
	ORBIS_SYSCALL_TABLE(ENUM_OP)
#undef ENUM_OP
};

static std::map<OrbisSyscallNr, const char *> bsd_syscall_strings_map = {
#define STRING_OP(value, name) { name, #name },
	ORBIS_SYSCALL_TABLE(STRING_OP)
#undef STRING_OP
};

static inline std::string to_string(OrbisSyscallNr nr) {
	const auto &it = bsd_syscall_strings_map.find(nr);
	if (it == bsd_syscall_strings_map.end()) {
		return std::string("UNKNOWN_SYSCALL ") + "(" + std::to_string((uint) nr) + ")";
	} else {
		return it->second;
	}
}